{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,qBAAIJ,WAAS,EAAb,cAAgBD,EAAMG,QAAQG,KAA9B,OACA,6BACI,4BACKN,EAAMG,QAAQI,cCJlBC,G,MAAW,SAAAR,GAAK,OAGrB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPpBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2CCG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAWJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAVnC,EAAKC,MAAO,CACVb,SAAS,GACTU,YAAY,IALF,E,qDAgBd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAG1C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,gCACH,cAAC,EAAD,CACCW,YAAY,iBACZC,aAAee,KAAKf,eAGpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAtCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dac8b5b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n        <h1 className> {props.monster.name} </h1>\r\n        <h2>\r\n            <p>\r\n                {props.monster.email}\r\n            </p>\r\n        </h2>\r\n    </div>\r\n);","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\n\r\n\r\nexport const CardList = props => (\r\n\r\n    \r\n        <div className=\"card-list\">\r\n          {props.monsters.map(monster => (\r\n              <Card key={monster.id} monster={monster}/>\r\n          ))}\r\n        </div>\r\n    \r\n);","import React from \"react\";  \r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder,handleChange }) => (\r\n    <input \r\n    className='search'\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n\r\n);\r\n  \r\n","import React from 'react';\nimport './App.css';\nimport {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nclass App extends Component {\n\n  constructor() {\n    super();\n  \n    this.state= {\n      monsters:[],\n      searchField:''\n  };\n\n}\n\n//arrow function binds automatically the this keyword to the \n//CONTEXT that the function is defined\nhandleChange = e => {\n  this.setState({searchField: e.target.value});\n}\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n    }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\"> Monsters Rolodex </h1>\n     <SearchBox \n      placeholder=\"search monster\"\n      handleChange= {this.handleChange}\n      /> \n\n      <CardList monsters={filteredMonsters}/>\n\n    </div>\n    );\n}\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}